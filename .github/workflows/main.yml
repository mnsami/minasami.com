# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      
      - name: Get current timestamp
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-H:i:s')"

      - name: Cache build folder
        uses: actions/cache@v2
        env:
          cache-name: cache-site-build
        with:
          path: _site
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ steps.date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ steps.date.outputs.date }}
      
      # Install dependencies
      - name: Install dependencies
        run: make install

      - name: Clean build folder
        id: website-clean
        run: make clean

      - name: Build the website
        id: website-build
        run: make build

      - name: Build the tags
        id: tags-build
        run: make build
      
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Test website
        id: website-lint
        run: make lint
  
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:    
      - name: ssh deploy
        if: ${{ success() }}
        uses: easingthemes/ssh-deploy@main
        env:
          ARGS: "-rltgoDzvO --delete"
          # Private Key
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          # Remote host
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          # Remote user
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          # Remote port
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          # Source directory
          SOURCE: "_site/"
          # Target directory
          TARGET: ${{ secrets.TARGET }}
